# /roles/reqsign/tasks/main

- name: install openssl
  apt:
    pkg:
      - openssl
      - python3-pip

- name: install pip crypto
  ansible.builtin.pip:
    name: cryptography

- name: mkdir
  become: true
  ansible.builtin.file:
    path: "{{ cert_dir }}"
    state: directory
    mode: '0755'

# generate openssl key
- name: generate key
  community.crypto.openssl_privatekey:
    path: "{{ cert_dir }}/{{ inventory_hostname }}-ansible.key"

# convert to pk8
- name: convert to pk8
  community.crypto.openssl_privatekey_convert:
    src_path: "{{ cert_dir }}/{{ inventory_hostname }}-ansible.key"
    dest_path: "{{ cert_dir }}/{{ inventory_hostname }}-ansible-pk8.key"
    format: pkcs8
  when: convert

# generate certificate signing request
- name: generate csr
  community.crypto.openssl_csr:
    path: "{{ cert_dir }}/{{ inventory_hostname }}-ansible.req"
    privatekey_path: "{{ cert_dir }}/{{ inventory_hostname }}-ansible.key"
    subject_ordered: [
      'C=FR',
      'ST=NORD',
      'L=LILLE',
      'O=GastonMedilab',
      'OU=COMMUNITY',
      'CN={{ inventory_hostname }}.azeroth.wow'
  ]

# recupere les fichiers des nodes
- name: fetch from nodes
  ansible.builtin.fetch:
    src: "{{ cert_dir }}/{{ inventory_hostname }}-ansible.req"
    dest: "/tmp"

# sign
#- name: signing with custom script
#  local_action: ansible.builtin.command /home/watchtower/ansible/roles/reqsign

- name: appel de l'autorite 
  hosts: authority
  ansible.builtin.import_role:
    name: reqsign
  task_from: sign
  vars:
    old_hosts: "{{ ansible_play_hosts }}"

# distribue les cert signes
#- name: distribue les certs
#  ansible.builtin.copy:
#    src: "/tmp/{{ inventory_hostname }}/{{ cert_dir }}/"
#    dest: "{{ cert_dir }}/{{ inventory_hostname }}-ansible.crt"
